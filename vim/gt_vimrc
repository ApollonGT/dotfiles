" Custom part of vimrc {
" ------------------------------------------------------------------- "
" Source the vimrc file after saving it
if has("autocmd")
  autocmd bufwritepost .vimrc source $MYVIMRC
endif

" Set number
set number
" Don't wrap text - code
set nowrap

" Switch buffers without save
set hidden
" Maintain undo history between sessions"
set undofile
set undodir=~/.vim/undodir

" set leader to ,
let mapleader = ","

" Toggle Relative number
nmap <C-n> :set rnu!<CR>
nmap <C-s> :syn sync fromstart<CR>

" List buffers with shortcut Ctrl - B
nmap <C-B> :buffers<CR>:buffer<space>

" No highlight
nmap <leader>/ :noh<CR>

" Show column 81
set colorcolumn=81,110

" Indentation
syntax enable
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set smartindent

" JS bindings
imap <C-l> console.log();<esc>hi

" ---- Vim Plugin ---- "
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-surround'
Plug 'airblade/vim-gitgutter'
Plug 'raimondi/delimitmate'
Plug 'yggdroot/indentline'
Plug 'craigemery/vim-autotag'
Plug 'scrooloose/nerdtree'
Plug 'whatyouhide/vim-gotham'
Plug 'suan/vim-instant-markdown'
Plug 'bronson/vim-trailing-whitespace'
Plug 'klen/python-mode'
Plug 'maralla/completor.vim'
Plug 'posva/vim-vue'
Plug 'ironcamel/vim-script-runner'

call plug#end()

" NerdTree
map <C-e> :NERDTreeToggle<CR>

" PyMode Options
let g:pymode_folding = 0

" ctrlp option
let g:ctrlp_show_hidden = 1
let g:ctrlp_extensions = ['tag']
nnoremap <Leader>p :CtrlPTag<Cr>

" Set theme
colorscheme gotham256

" Teach Vim to Fish
if &shell =~# 'fish$'
    set shell=sh
endif

" }
